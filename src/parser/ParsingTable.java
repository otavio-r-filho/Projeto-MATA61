package parser;

public class ParsingTable {
	                             
	private String parsingTable[][] = { // 0         1        2        3        4        5        6        7        8         9        10       11       12       13       14       15       16       17       18       19       20       21       22       23       24       25       26       27       28       29       30       31       32       33       34       35       36       37       38       39
						 		   /*0*/ {"ERROR",  "0"    , "ERROR", "ERROR", "0"    , "ERROR", "ERROR", "ERROR", "ERROR",  "0"    , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*1*/ {"ERROR",  "1"    , "ERROR", "ERROR", "1"    , "ERROR", "ERROR", "ERROR", "ERROR",  "1"    , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "70"   },
						 		   /*2*/ {"ERROR",  "3"    , "ERROR", "ERROR", "3"    , "ERROR", "ERROR", "ERROR", "ERROR",  "4"    , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*3*/ {"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "5"    , "5"    , "6"    , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*4*/ {"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "70"   , "7"    , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*5*/ {"ERROR",  "10"   , "ERROR", "ERROR", "9"    , "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*6*/ {"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "11"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*7*/ {"ERROR",  "12"   , "ERROR", "ERROR", "12"   , "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "13"   , "ERROR", "70"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*8*/ {"ERROR",  "15"   , "ERROR", "ERROR", "15"   , "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*9*/ {"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "16"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*10*/{"ERROR",  "17"   , "70"   , "70"   , "17"   , "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "70"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "70"   , "ERROR", "ERROR", "ERROR"},
						 		   /*11*/{"ERROR",  "ERROR", "19"   , "19"   , "ERROR", "ERROR", "19"   , "ERROR", "ERROR",  "ERROR", "19"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "19"   , "70"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "19"   , "ERROR", "ERROR", "ERROR"},
						 		   /*12*/{"ERROR",  "ERROR", "23"   , "21"   , "ERROR", "ERROR", "25"   , "ERROR", "ERROR",  "ERROR", "22"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "26"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "24"   , "ERROR", "ERROR", "ERROR"},
						 		   /*13*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "27"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "27"   , "ERROR", "ERROR", "ERROR", "ERROR", "70"   , "ERROR", "27"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "27"   , "27"   , "27"   , "ERROR"},
						 		   /*14*/{"29"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "70"   , "ERROR", "ERROR", "ERROR"},
						 		   /*15*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "32"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "31"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*16*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "33"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*17*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "34"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR"},
						 		   /*18*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "35"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "35"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "35"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "35"   , "35"   , "35"   , "ERROR"},
						 		   /*19*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "38"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "38"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "38"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "38"   , "38"   , "38"   , "ERROR"},
						 		   /*20*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "41"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "41"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "41"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "41"   , "41"   , "41"   , "ERROR"},
						 		   /*21*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "45"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "45"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "45"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "45"   , "45"   , "45"   , "ERROR"},
						 		   /*22*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "51"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "51"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "51"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "51"   , "51"   , "51"   , "ERROR"},
						 		   /*23*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "60"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "59"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "57"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "58"   , "55"   , "56"   , "ERROR"},
						 		   /*24*/{"70"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "70"   , "70"   , "65"   , "65"   , "70"   , "70"   , "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "64"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR"},
						 		   /*25*/{"70"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "70"   , "36"   , "70"   , "70"   , "70"   , "ERROR"},
						 		   /*26*/{"70"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "39"   , "70"   , "70"   , "70"   , "70"   , "ERROR"},
						 		   /*27*/{"70"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "70"   , "70"   , "70"   , "42"   , "43"   , "70"   , "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR"},
						 		   /*28*/{"70"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "70"   , "70"   , "ERROR", "ERROR", "46"   , "47"   , "ERROR", "70"   , "48"   , "49"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR"},
						 		   /*29*/{"70"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "53"   , "52"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR"},
						 		   /*30*/{"70"   ,  "ERROR", "70"   , "70"   , "ERROR", "ERROR", "70"   , "ERROR", "ERROR",  "ERROR", "70"   , "70"   , "70"   , "62"   , "61"   , "70"   , "70"   , "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR", "ERROR", "70"   , "70"   , "ERROR", "ERROR", "ERROR", "70"   , "70"   , "70"   , "70"   , "70"   , "ERROR"},
						 		   /*31*/{"ERROR",  "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR",  "ERROR", "ERROR", "ERROR", "67"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "67"   , "ERROR", "ERROR", "ERROR", "ERROR", "70"   , "68"   , "67"   , "70"   , "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "ERROR", "67"   , "67"   , "67"   , "ERROR"}
						 			 };
	public ParsingTable() {
		
	}
	
	public int getProductionInt(int line, int collumn) {
		if(parsingTable[line][collumn].equals("ERROR")) {
			return -1;
		} else {
			return Integer.parseInt(parsingTable[line][collumn]);
		}
	}
	
	public String getProductionString(int line, int collumn) {
		return parsingTable[line][collumn];
	}
	
}
	